import streamlit as st
from llama_cpp import Llama

import requests
import os

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –ª–µ–π–∞—É—Ç–∞
st.set_page_config(page_title="Saiga", page_icon="üß†", layout="wide", )
st.markdown("# –ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç")

# CSS —Å—Ç–∏–ª–∏
def local_css(file_name):
    with open(file_name) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

local_css("styles.css")


# # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
# def download_model(model_url, save_path):
#     response = requests.get(model_url)
#     with open(save_path, 'wb') as f:
#         f.write(response.content)
#
# # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
# model_path = "model-q4_K.gguf"
# model_url = "https://huggingface.co/IlyaGusev/saiga_llama3_8b_gguf/resolve/main/model-q4_K.gguf"
#
# # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
# if not os.path.exists(model_path):
#     st.write("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
#     download_model(model_url, model_path)
#     st.write("–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")


SYSTEM_PROMPT = "–¢—ã ‚Äî –°–∞–π–≥–∞, —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –¢—ã —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –ª—é–¥—å–º–∏ –∏ –ø–æ–º–æ–≥–∞–µ—à—å –∏–º, –∏ –¥–æ–ª–∂–Ω–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–ø–æ—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –∑–∞–¥—é—Ç"


def interact(text,
    model_path="./model-q4_K.gguf",
    n_ctx=8192,
    top_k=30,
    top_p=0.9,
    temperature=0.6,
    repeat_penalty=1.1
):
    model = Llama(
        model_path=model_path,
        n_ctx=n_ctx,
        n_parts=1,
        verbose=False,
    )
    messages = [{"role": "system", "content": SYSTEM_PROMPT}]
    user_message = text
    messages.append({"role": "user", "content": user_message})
    response = ""
    for part in model.create_chat_completion(
            messages,
            temperature=temperature,
            top_k=top_k,
            top_p=top_p,
            repeat_penalty=repeat_penalty,
            stream=True,
        ):
            delta = part["choices"][0]["delta"]
            if "content" in delta:
                yield delta["content"]



st.title('üêµüîó –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ LLM')


# –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
st.markdown("# –ß–∞—Ç —Å —Å–∞–π–≥–æ–π")

chat_container = st.empty()

with st.form('my_form'):
    # –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
    user_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", "")
    submitted = st.form_submit_button('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å')

    if submitted:
        if 'text' not in st.session_state:
            st.session_state.text = ''
        st.session_state.text += f"\\n–í—ã: {user_input}\n"
        user_input = ""
        st.session_state.text += f"\\nSaiga: "

        for response in interact(user_input):
            st.session_state.text +=response
            chat_container.markdown(st.session_state.text, unsafe_allow_html=True)
        st.session_state.text +="\n"
